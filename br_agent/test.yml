Resources:
  bedrockbucket363DEAB0:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: br-agent-bucketdfc3ca8a-fc56-44d7-afc2-ddf15556927a
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: br-agent/bedrock_bucket/Resource
  bucketnameparam9D880E65:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /br_agent/bucket_name
      Type: String
      Value: br-agent-bucketdfc3ca8a-fc56-44d7-afc2-ddf15556927a
    Metadata:
      aws:cdk:path: br-agent/bucket_name_param/Resource
  sqlitedbnameDF19802A:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /br_agent/sqlite_db_name
      Type: String
      Value: pets.db
    Metadata:
      aws:cdk:path: br-agent/sqlite_db_name/Resource
  lambdarole3F9471F6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: lambda_role for br_agent actions
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonS3FullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMFullAccess
    Metadata:
      aws:cdk:path: br-agent/lambda_role/Resource
  lambdaauroraBA49C98E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c19e9699e1dcd731063ff5e75641d77594f6166d4902a34df0f322387d9b448d.zip
      Handler: lambda_aurora.handler
      Role:
        Fn::GetAtt:
          - lambdarole3F9471F6
          - Arn
      Runtime: python3.9
      Timeout: 300
    DependsOn:
      - lambdarole3F9471F6
    Metadata:
      aws:cdk:path: br-agent/lambda_aurora/Resource
      aws:asset:path: asset.c19e9699e1dcd731063ff5e75641d77594f6166d4902a34df0f322387d9b448d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  lambdasqlite95216148:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c19e9699e1dcd731063ff5e75641d77594f6166d4902a34df0f322387d9b448d.zip
      Handler: lambda_sqlite.lambda_handler
      Role:
        Fn::GetAtt:
          - lambdarole3F9471F6
          - Arn
      Runtime: python3.9
      Timeout: 300
    DependsOn:
      - lambdarole3F9471F6
    Metadata:
      aws:cdk:path: br-agent/lambda_sqlite/Resource
      aws:asset:path: asset.c19e9699e1dcd731063ff5e75641d77594f6166d4902a34df0f322387d9b448d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  apirole0281ABD0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSLambda_FullAccess
    Metadata:
      aws:cdk:path: br-agent/api_role/Resource
  lambdaproxy3EB58A0C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c19e9699e1dcd731063ff5e75641d77594f6166d4902a34df0f322387d9b448d.zip
      Handler: lambda_proxy.lambda_handler
      Role:
        Fn::GetAtt:
          - lambdarole3F9471F6
          - Arn
      Runtime: python3.9
      Timeout: 300
    DependsOn:
      - lambdarole3F9471F6
    Metadata:
      aws:cdk:path: br-agent/lambda_proxy/Resource
      aws:asset:path: asset.c19e9699e1dcd731063ff5e75641d77594f6166d4902a34df0f322387d9b448d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  lambdaapi40841C60:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: br_agent_lambda_api
      Name: br_agent_lambda_api
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Resource
  lambdaapiDeployment77E502E615bf47da23d5aa24d0f5d670cc46f1e6:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: br_agent_lambda_api
      RestApiId:
        Ref: lambdaapi40841C60
    DependsOn:
      - lambdaapiagentGET3937FBF8
      - lambdaapiagentPOSTD8C176EE
      - lambdaapiagent477A7C05
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Deployment/Resource
  lambdaapiDeploymentStageprod611C80ED:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: lambdaapiDeployment77E502E615bf47da23d5aa24d0f5d670cc46f1e6
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
      RestApiId:
        Ref: lambdaapi40841C60
      StageName: prod
      TracingEnabled: true
    Metadata:
      aws:cdk:path: br-agent/lambda_api/DeploymentStage.prod/Resource
  lambdaapiagent477A7C05:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - lambdaapi40841C60
          - RootResourceId
      PathPart: agent
      RestApiId:
        Ref: lambdaapi40841C60
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Default/agent/Resource
  lambdaapiagentGETApiPermissionbragentlambdaapiFFA2F14FGETagent9740DBEC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lambdaproxy3EB58A0C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: lambdaapi40841C60
            - /
            - Ref: lambdaapiDeploymentStageprod611C80ED
            - /GET/agent
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Default/agent/GET/ApiPermission.bragentlambdaapiFFA2F14F.GET..agent
  lambdaapiagentGETApiPermissionTestbragentlambdaapiFFA2F14FGETagent743A8064:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lambdaproxy3EB58A0C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: lambdaapi40841C60
            - /test-invoke-stage/GET/agent
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Default/agent/GET/ApiPermission.Test.bragentlambdaapiFFA2F14F.GET..agent
  lambdaapiagentGET3937FBF8:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - lambdaproxy3EB58A0C
                  - Arn
              - /invocations
      ResourceId:
        Ref: lambdaapiagent477A7C05
      RestApiId:
        Ref: lambdaapi40841C60
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Default/agent/GET/Resource
  lambdaapiagentPOSTApiPermissionbragentlambdaapiFFA2F14FPOSTagentD0A0A672:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lambdaproxy3EB58A0C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: lambdaapi40841C60
            - /
            - Ref: lambdaapiDeploymentStageprod611C80ED
            - /POST/agent
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Default/agent/POST/ApiPermission.bragentlambdaapiFFA2F14F.POST..agent
  lambdaapiagentPOSTApiPermissionTestbragentlambdaapiFFA2F14FPOSTagentA170FDEC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lambdaproxy3EB58A0C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: lambdaapi40841C60
            - /test-invoke-stage/POST/agent
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Default/agent/POST/ApiPermission.Test.bragentlambdaapiFFA2F14F.POST..agent
  lambdaapiagentPOSTD8C176EE:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - lambdaproxy3EB58A0C
                  - Arn
              - /invocations
      ResourceId:
        Ref: lambdaapiagent477A7C05
      RestApiId:
        Ref: lambdaapi40841C60
    Metadata:
      aws:cdk:path: br-agent/lambda_api/Default/agent/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VP0U7DMAz8lr1nYaJCgsdtiCcQVfmAyWtN8dokVexoqqr+O0lajfF0d8754nvULzu928CVt3XTbXs66+lLoO5UHJ0mLvR0CHWHoo7fdmULHIBxVswmLXiybQkeDAr6ZL2JWRFES+V6TPOEs+rBnBvQ01uwtZCz6eWel+gNMUcVfyhOwIzCep9AwUAtCF5h1NN7zqmQZT9Qjl/pKw69Gw3afPedit3afMhCot8FX2MqcxNr0MI/UH5ck0YLm+c/Xz4oBcX2yfEZZAjybz3yo7MNSe5SjjHCPhT6WT9tLky09cEKGdTVgr/D9/BOjwEAAA==
    Metadata:
      aws:cdk:path: br-agent/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  lambdaapiEndpoint08EEC087:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: lambdaapi40841C60
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: lambdaapiDeploymentStageprod611C80ED
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

